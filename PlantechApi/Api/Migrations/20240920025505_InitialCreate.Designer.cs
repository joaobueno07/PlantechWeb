// <auto-generated />
using System;
using Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(PlantechContext))]
    [Migration("20240920025505_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Cargofuncao", b =>
                {
                    b.Property<string>("IdCargo")
                        .HasColumnType("TEXT")
                        .HasColumnName("id_cargo");

                    b.Property<int>("IdFuncao")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_funcao");

                    b.HasKey("IdCargo", "IdFuncao");

                    b.HasIndex("IdFuncao");

                    b.ToTable("cargofuncao", (string)null);
                });

            modelBuilder.Entity("Funcaopermissao", b =>
                {
                    b.Property<int>("IdFuncao")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_funcao");

                    b.Property<int>("IdPermissao")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_permissao");

                    b.HasKey("IdFuncao", "IdPermissao");

                    b.HasIndex("IdPermissao");

                    b.ToTable("funcaopermissao", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Cargo", b =>
                {
                    b.Property<string>("IdCargo")
                        .HasColumnType("TEXT")
                        .HasColumnName("id_cargo");

                    b.Property<string>("Descricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("NomeCargo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome_cargo");

                    b.HasKey("IdCargo");

                    b.ToTable("cargos", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Cliente", b =>
                {
                    b.Property<int>("Cnpj")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cnpj");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("endereco")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("razao_social");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT")
                        .HasColumnName("status");

                    b.Property<string>("Telefone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("telefone")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Cnpj");

                    b.ToTable("clientes", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Colheitum", b =>
                {
                    b.Property<int>("IdColheita")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_colheita");

                    b.Property<DateTime?>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("data")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Descricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_funcionario")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_produto")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantidade")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("IdColheita");

                    b.HasIndex("IdFuncionario");

                    b.HasIndex("IdProduto");

                    b.ToTable("colheita", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_compra");

                    b.Property<DateTime?>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("data")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Descricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdFornecedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_fornecedor")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_funcionario")
                        .HasDefaultValueSql("NULL");

                    b.Property<decimal?>("Valor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(10,0)")
                        .HasColumnName("valor")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("IdCompra");

                    b.HasIndex("IdFornecedor");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("compras", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Contasreceber", b =>
                {
                    b.Property<int>("IdContaReceber")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_conta_receber");

                    b.Property<DateTime?>("DataVencimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("data_vencimento")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_cliente")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("status")
                        .HasDefaultValueSql("NULL");

                    b.Property<decimal?>("Valor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(10,0)")
                        .HasColumnName("valor")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("IdContaReceber");

                    b.HasIndex("IdCliente");

                    b.ToTable("contasreceber", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Culturasperdida", b =>
                {
                    b.Property<int>("IdCulturaPerdida")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_cultura_perdida");

                    b.Property<DateTime?>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("data")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Descricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdPlantio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_plantio")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantidade")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("IdCulturaPerdida");

                    b.HasIndex("IdPlantio");

                    b.ToTable("culturasperdidas", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Estoque", b =>
                {
                    b.Property<int>("IdEstoque")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_estoque");

                    b.Property<DateTime?>("DataEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("data_entrada")
                        .HasDefaultValueSql("NULL");

                    b.Property<DateTime?>("DataSaida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("data_saida")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdInsumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_insumo")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_produto")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantidade")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("TipoItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("tipo_item")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("IdEstoque");

                    b.HasIndex("IdInsumo");

                    b.HasIndex("IdProduto");

                    b.ToTable("estoque", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Fornecedore", b =>
                {
                    b.Property<int>("Cnpj")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cnpj");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("endereco")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("razao_social");

                    b.Property<string>("Telefone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("telefone")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Cnpj");

                    b.ToTable("fornecedores", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Funcionario", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_funcionario");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("DATE")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("senha");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT")
                        .HasColumnName("status");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("usuario");

                    b.HasKey("IdFuncionario");

                    b.HasIndex(new[] { "Usuario" }, "IX_funcionarios_usuario")
                        .IsUnique();

                    b.ToTable("funcionarios", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Funcionariocargo", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_funcionario");

                    b.Property<string>("IdCargo")
                        .HasColumnType("TEXT")
                        .HasColumnName("id_cargo");

                    b.Property<int>("IdNivelAcesso")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_nivel_acesso");

                    b.HasKey("IdFuncionario", "IdCargo", "IdNivelAcesso");

                    b.HasIndex("IdCargo");

                    b.HasIndex("IdNivelAcesso");

                    b.ToTable("funcionariocargo", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Funco", b =>
                {
                    b.Property<int>("IdFuncao")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_funcao");

                    b.Property<string>("Descricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("NomeFuncao")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome_funcao");

                    b.HasKey("IdFuncao");

                    b.ToTable("funcoes", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Insumo", b =>
                {
                    b.Property<int>("IdInsumo")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_insumo");

                    b.Property<string>("Descricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Nome")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantidade")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("IdInsumo");

                    b.ToTable("insumos", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Movimentacao", b =>
                {
                    b.Property<int>("IdMovimentacao")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_movimentacao");

                    b.Property<DateTime?>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("data")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdInsumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_insumo")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_produto")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantidade")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("TipoItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("tipo_item")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("TipoMovimentacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("tipo_movimentacao")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("IdMovimentacao");

                    b.HasIndex("IdInsumo");

                    b.HasIndex("IdProduto");

                    b.ToTable("movimentacao", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Niveisacesso", b =>
                {
                    b.Property<int>("IdNivelAcesso")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_nivel_acesso");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao");

                    b.HasKey("IdNivelAcesso");

                    b.ToTable("niveisacesso", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Ordemcompra", b =>
                {
                    b.Property<int>("IdOrdemCompra")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_ordem_compra");

                    b.Property<DateTime?>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("data")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Descricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdFornecedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_fornecedor")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("status")
                        .HasDefaultValueSql("NULL");

                    b.Property<decimal?>("Valor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(10,0)")
                        .HasColumnName("valor")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("IdOrdemCompra");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("ordemcompra", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Permisso", b =>
                {
                    b.Property<int>("IdPermissao")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_permissao");

                    b.Property<string>("Descricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("NomePermissao")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome_permissao");

                    b.HasKey("IdPermissao");

                    b.ToTable("permissoes", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Plantio", b =>
                {
                    b.Property<int>("IdPlantio")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_plantio");

                    b.Property<DateTime?>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("data")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Descricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_funcionario")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantidade")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("IdPlantio");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("plantio", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_produto");

                    b.Property<string>("Descricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Nome")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome")
                        .HasDefaultValueSql("NULL");

                    b.Property<decimal?>("Preco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(10,0)")
                        .HasColumnName("preco")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("IdProduto");

                    b.ToTable("produtos", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Produtosvendido", b =>
                {
                    b.Property<int>("IdProdutoVendido")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_produto_vendido");

                    b.Property<DateTime?>("DataVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("data_venda")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_produto")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_venda")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantidade")
                        .HasDefaultValueSql("NULL");

                    b.Property<decimal?>("ValorTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(10,0)")
                        .HasColumnName("valor_total")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("IdProdutoVendido");

                    b.HasIndex("IdProduto");

                    b.HasIndex("IdVenda");

                    b.ToTable("produtosvendidos", (string)null);
                });

            modelBuilder.Entity("Infra.Models.Venda", b =>
                {
                    b.Property<int>("IdVenda")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_venda");

                    b.Property<DateTime?>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("data")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("Descricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_cliente")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_funcionario")
                        .HasDefaultValueSql("NULL");

                    b.Property<decimal?>("Valor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(10,0)")
                        .HasColumnName("valor")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("IdVenda");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("vendas", (string)null);
                });

            modelBuilder.Entity("Cargofuncao", b =>
                {
                    b.HasOne("Infra.Models.Cargo", null)
                        .WithMany()
                        .HasForeignKey("IdCargo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Models.Funco", null)
                        .WithMany()
                        .HasForeignKey("IdFuncao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Funcaopermissao", b =>
                {
                    b.HasOne("Infra.Models.Funco", null)
                        .WithMany()
                        .HasForeignKey("IdFuncao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Models.Permisso", null)
                        .WithMany()
                        .HasForeignKey("IdPermissao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Infra.Models.Colheitum", b =>
                {
                    b.HasOne("Infra.Models.Funcionario", "IdFuncionarioNavigation")
                        .WithMany("Colheita")
                        .HasForeignKey("IdFuncionario");

                    b.HasOne("Infra.Models.Produto", "IdProdutoNavigation")
                        .WithMany("Colheita")
                        .HasForeignKey("IdProduto");

                    b.Navigation("IdFuncionarioNavigation");

                    b.Navigation("IdProdutoNavigation");
                });

            modelBuilder.Entity("Infra.Models.Compra", b =>
                {
                    b.HasOne("Infra.Models.Fornecedore", "IdFornecedorNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdFornecedor");

                    b.HasOne("Infra.Models.Funcionario", "IdFuncionarioNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdFuncionario");

                    b.Navigation("IdFornecedorNavigation");

                    b.Navigation("IdFuncionarioNavigation");
                });

            modelBuilder.Entity("Infra.Models.Contasreceber", b =>
                {
                    b.HasOne("Infra.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Contasrecebers")
                        .HasForeignKey("IdCliente");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("Infra.Models.Culturasperdida", b =>
                {
                    b.HasOne("Infra.Models.Plantio", "IdPlantioNavigation")
                        .WithMany("Culturasperdida")
                        .HasForeignKey("IdPlantio");

                    b.Navigation("IdPlantioNavigation");
                });

            modelBuilder.Entity("Infra.Models.Estoque", b =>
                {
                    b.HasOne("Infra.Models.Insumo", "IdInsumoNavigation")
                        .WithMany("Estoques")
                        .HasForeignKey("IdInsumo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Infra.Models.Produto", "IdProdutoNavigation")
                        .WithMany("Estoques")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("IdInsumoNavigation");

                    b.Navigation("IdProdutoNavigation");
                });

            modelBuilder.Entity("Infra.Models.Funcionariocargo", b =>
                {
                    b.HasOne("Infra.Models.Cargo", "IdCargoNavigation")
                        .WithMany("Funcionariocargos")
                        .HasForeignKey("IdCargo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Models.Funcionario", "IdFuncionarioNavigation")
                        .WithMany("Funcionariocargos")
                        .HasForeignKey("IdFuncionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infra.Models.Niveisacesso", "IdNivelAcessoNavigation")
                        .WithMany("Funcionariocargos")
                        .HasForeignKey("IdNivelAcesso")
                        .IsRequired();

                    b.Navigation("IdCargoNavigation");

                    b.Navigation("IdFuncionarioNavigation");

                    b.Navigation("IdNivelAcessoNavigation");
                });

            modelBuilder.Entity("Infra.Models.Movimentacao", b =>
                {
                    b.HasOne("Infra.Models.Insumo", "IdInsumoNavigation")
                        .WithMany("Movimentacaos")
                        .HasForeignKey("IdInsumo");

                    b.HasOne("Infra.Models.Produto", "IdProdutoNavigation")
                        .WithMany("Movimentacaos")
                        .HasForeignKey("IdProduto");

                    b.Navigation("IdInsumoNavigation");

                    b.Navigation("IdProdutoNavigation");
                });

            modelBuilder.Entity("Infra.Models.Ordemcompra", b =>
                {
                    b.HasOne("Infra.Models.Fornecedore", "IdFornecedorNavigation")
                        .WithMany("Ordemcompras")
                        .HasForeignKey("IdFornecedor");

                    b.Navigation("IdFornecedorNavigation");
                });

            modelBuilder.Entity("Infra.Models.Plantio", b =>
                {
                    b.HasOne("Infra.Models.Funcionario", "IdFuncionarioNavigation")
                        .WithMany("Plantios")
                        .HasForeignKey("IdFuncionario");

                    b.Navigation("IdFuncionarioNavigation");
                });

            modelBuilder.Entity("Infra.Models.Produtosvendido", b =>
                {
                    b.HasOne("Infra.Models.Produto", "IdProdutoNavigation")
                        .WithMany("Produtosvendidos")
                        .HasForeignKey("IdProduto");

                    b.HasOne("Infra.Models.Venda", "IdVendaNavigation")
                        .WithMany("Produtosvendidos")
                        .HasForeignKey("IdVenda");

                    b.Navigation("IdProdutoNavigation");

                    b.Navigation("IdVendaNavigation");
                });

            modelBuilder.Entity("Infra.Models.Venda", b =>
                {
                    b.HasOne("Infra.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Venda")
                        .HasForeignKey("IdCliente");

                    b.HasOne("Infra.Models.Funcionario", "IdFuncionarioNavigation")
                        .WithMany("Venda")
                        .HasForeignKey("IdFuncionario");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdFuncionarioNavigation");
                });

            modelBuilder.Entity("Infra.Models.Cargo", b =>
                {
                    b.Navigation("Funcionariocargos");
                });

            modelBuilder.Entity("Infra.Models.Cliente", b =>
                {
                    b.Navigation("Contasrecebers");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("Infra.Models.Fornecedore", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("Ordemcompras");
                });

            modelBuilder.Entity("Infra.Models.Funcionario", b =>
                {
                    b.Navigation("Colheita");

                    b.Navigation("Compras");

                    b.Navigation("Funcionariocargos");

                    b.Navigation("Plantios");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("Infra.Models.Insumo", b =>
                {
                    b.Navigation("Estoques");

                    b.Navigation("Movimentacaos");
                });

            modelBuilder.Entity("Infra.Models.Niveisacesso", b =>
                {
                    b.Navigation("Funcionariocargos");
                });

            modelBuilder.Entity("Infra.Models.Plantio", b =>
                {
                    b.Navigation("Culturasperdida");
                });

            modelBuilder.Entity("Infra.Models.Produto", b =>
                {
                    b.Navigation("Colheita");

                    b.Navigation("Estoques");

                    b.Navigation("Movimentacaos");

                    b.Navigation("Produtosvendidos");
                });

            modelBuilder.Entity("Infra.Models.Venda", b =>
                {
                    b.Navigation("Produtosvendidos");
                });
#pragma warning restore 612, 618
        }
    }
}
